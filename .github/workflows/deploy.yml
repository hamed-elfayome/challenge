name: Deploy Project to Panel

on:
  push:
    branches:
      - production
      - test

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP 8.2
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, intl, bcmath, zip
          tools: composer:v2

      - name: Install Composer dependencies
        run: |
          composer install --no-dev --optimize-autoloader --no-progress --no-suggest

      # Setup SSH agent for secure deployment
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add server to known hosts
        run: |
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Set project path based on branch
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/production" ]]; then
            echo "PROJECT_PATH=${{ secrets.PROJECT_PATH_PRODUCTION }}" >> $GITHUB_ENV
            echo "DEPLOYMENT_ENV=production" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/test" ]]; then
            echo "PROJECT_PATH=${{ secrets.PROJECT_PATH_TEST }}" >> $GITHUB_ENV
            echo "DEPLOYMENT_ENV=testing" >> $GITHUB_ENV
          fi

      - name: Prepare Remote Directory
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.PANEL_USERNAME }}@${{ secrets.SERVER_IP }} << 'EOF'
            mkdir -p ${{ env.PROJECT_PATH }}
            chmod -R 755 ${{ env.PROJECT_PATH }}
            chown -R ${{ secrets.PANEL_USERNAME }}:www-data ${{ env.PROJECT_PATH }}
            exit
          EOF

      - name: Deploy files to the server
        run: |
          rsync -avz \
            --delete \
            --exclude='.git' \
            --exclude='vendor/' \
            --exclude='node_modules/' \
            --exclude='storage/' \
            --chmod=D755,F644 \
            ./ ${{ secrets.PANEL_USERNAME }}@${{ secrets.SERVER_IP }}:${{ env.PROJECT_PATH }}

      - name: Finalize Deployment
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.PANEL_USERNAME }}@${{ secrets.SERVER_IP }} << 'EOF'
            cd ${{ env.PROJECT_PATH }}

            # Composer install with appropriate flags
            composer install --no-dev --optimize-autoloader

            # Clear various Laravel caches
            php artisan config:clear
            php artisan cache:clear
            php artisan view:clear
            php artisan route:clear

            # Rebuild caches for production performance
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache

            exit
          EOF

      - name: Deployment Notification
        if: success()
        run: |
          echo "🚀 Deployment to ${{ env.DEPLOYMENT_ENV }} successful!"

      - name: Handle Deployment Failure
        if: failure()
        run: |
          echo "❌ Deployment to ${{ env.DEPLOYMENT_ENV }} failed!"
